-- Clears the screen --
term.clear()
term.setCursorPos(1, 1)

-- Sets up wireless modem peripheral --
modem = peripheral.wrap("top")
modem.open(56)
modem.open(64)

-- Declares eMail word --
print("What is your Email Address:")
mailword = read()

-- Clears the screen --
term.clear()
term.setCursorPos(1, 1)

print("Would you like to compose (1) or retrieve (2)?")
choice = read()

-- Compose a message --
if (choice == "1") then
 term.clear()
 term.setCursorPos(1, 1)
 -- Transmits eMail word for checking --
 print("Who would you like to send to:")
 sendmailword = read()
 chanel = math.random(1, 50) -- I know I spelt it wrong. --
 modem.open(chanel)
 modem.transmit(56, chanel, sendmailword)
  -- Clears screen --
  term.clear()
  term.setCursorPos(1, 1)
  
  -- Message user wants to send --
  print("Type in the message you want to send:")
  message = read()
  -- Sends the message --
  modem.transmit(chanel, chanel, message)
  -- Sends your name --
  modem.transmit(chanel, chanel, mailword)
  term.clear()
  term.setCursorPos(1, 1)
  print("Message sent.")
end

-- Retrieving messages --
if (choice == "2") then
 print("Waiting for messages...")
 
 event = 0
 id = 0
 channel = 0
 channel2 = 0
 message = 0
 distance = 0
 messages = {}
 senders = {}
 i = 0
 
 while (event ~= "key") do
  term.clear()
  term.setCursorPos(1, 1)
  print("Waiting for messages...")
  print("You have "..i.." messages.")
  event, id, channel, channel2, message, distance = os.pullEvent()
  -- Checks if event is a modem message --
  if (event == "modem_message") then
   if (message ~= mailword) then
    if (channel == 64) then
     os.sleep(1)
     modem.transmit(64, 64, "yes")
    end
   end
   -- Opens private channel --
   modem.open(channel2)
   modem.close(56)
   -- Checks if email word is correct --
   if (message == mailword) then
    if (channel == 64) then
     modem.transmit(64, 64, "no")
    end
    print("Someone is sending you a message...")
    event, id, channel, channel2, message = os.pullEvent("modem_message")
    i = i + 1
    messages[i] = message
    event, id, channel, channel2, message = os.pullEvent("modem_message")
    senders[i] = message
   end
   if (message ~= mailword) then
    os.sleep(3)
    modem.transmit(50, 50, "no")
    print("Found a message that does not match any eMail words.")
   end
   -- Closes private channels --
   modem.open(56)
   modem.close(channel2)
  end
 end
 
 term.clear()
 term.setCursorPos(1, 1)
 j = 0
 
 while (j ~= i) do
  j = j + 1
  print("Message "..j..": ")
  print(messages[j])
  print("\nSent by: ")
  term.write(senders[j])
  event = os.pullEvent("key")
  term.clear()
  term.setCursorPos(1, 1)
 end
 
end

if (choice ~= "1") then
 if (choice ~= "2") then
  print("That is an invalid option.")
 end
end
